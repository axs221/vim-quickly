*quickly.txt*	Quickly jump to files. Cozy up to :find, :buffer, and :oldfiles.


Plugin:  Vim-Quickly
Author:  Shawn Axsom <axs221@gmail.com>


Help on using vim-quickly                              *quickly* *vim-quickly*

    Introduction ............................... |quickly-intro|
    Configuration .............................. |quickly-configuration|
    Commands ................................... |quickly-commands|
    Mappings ................................... |quickly-mappings|

==============================================================================
INTRODUCTION                                                   *quickly-intro*

Vim-Quickly is an implementation of :find, :buffer, and :oldfiles the way I
would have designed them.

  * Allow fallback when no results are found.
  * Load results in the Quickfix window if multiple results are found.
  * Allow multiple search terms in any order.
  * Don't use fuzzy matching, since it often results in many false positives.
  * Match each term on full path, without having to use |starstar|.
  * Extensible, with functions composable and reusable for any file lists.

This plugin is designed to be minimal yet effective. It was written in
Vimscript with minimal external dependencies (such as "find" on Mac and Linux
for faster file globbing performance).

It aims to be similar to built-in commands and use mostly built-in features,
while providing a more comfortable user experience.


==============================================================================
CONFIGURATION                                          *quickly-configuration*

    * |quickly_always_jump_to_first_result|
    * |quickly_open_quickfix_window|
    * |quickly_disable_default_key_mappings|


------------------------------------------------------------------------------
                                        *quickly_always_jump_to_first_result*

    Jump to first result on pressing <Enter>, even with multiple matches.

    Default:

        let g:quickly_always_jump_to_first_result = 0


------------------------------------------------------------------------------
                                        *quickly_open_quickfix_window*


    Open |quickfix| window when there are multiple matches.

    Default:

        let g:quickly_open_quickfix_window = 1


------------------------------------------------------------------------------
                                        *quickly_enable_default_key_mappings*

    Enable default key mappings. See |quickly-mappings|.

    Default:

        let g:quickly_enable_default_key_mappings = 1


==============================================================================
COMMANDS                                                    *quickly-commands*

    * |QuicklyAny|
    * |QuicklyBuffer|
    * |QuicklyBufferDelete|
    * |QuicklyMru|
    * |QuicklyFind|

------------------------------------------------------------------------------
                                                                  *QuicklyAny*

    :QuicklyAny <zero or more exact path match terms>

    Jump to file, buffer, or MRU.

    This combines |QuicklyBuffer|, |QuicklyMru|, and |QuicklyFind|.

    A waterfall approach is used with those commands:

      1. Find buffer matching name.
      2. If no matching buffer, find MRU (:help |oldfiles|) matching name.
      3. If no matching MRU, find file matching name.

    The waterfall approach is used assuming that:

      * The file you want to jump to is most often a buffer.
      * If the file isn't loaded as a buffer, it is likely to be recently used.
      * File search is sometimes necessary. Don't require a separate command.
      * File search is slow. Don't resort to it if you don't have to.

    nnoremap <c-p> :QuicklyAny<space>

------------------------------------------------------------------------------
                                                               *QuicklyBuffer*

    :QuicklyBuffer <zero or more exact path match terms>

    Jump to buffer.

    Similar to |:buffer|, but it matches multiple terms in any order.

    If one match is found, edit match in current window.
    If multiple matches are found, load results into |quickfix| window.

    nnoremap <leader>b :QuicklyBuffer<space>

------------------------------------------------------------------------------
                                                         *QuicklyBufferDelete*

    :QuicklyBufferDelete <zero or more exact path match terms>

    Delete all buffers matching patterns.

    Similar to |:bdelete|, but it matches multiple terms in any order.

    nnoremap <leader><leader>c :QuicklyBufferDelete<space>

------------------------------------------------------------------------------
                                                                  *QuicklyMru*

    :QuicklyMru <zero or more exact path match terms>

    Jump to MRU file found in |oldfiles|.

    Similar to |:oldfiles|, but it matches multiple terms in any order.

    If one match is found, edit match in current window.
    If multiple matches are found, load results into |quickfix| window.

    nnoremap <leader>o :QuicklyMru<space>

------------------------------------------------------------------------------
                                                                 *QuicklyFind*

    :QuicklyFind <zero or more exact path match terms>

    Jump to file by using ag, rg, find, or |globpath|, whichever is
    found first on the system, respectively.

    Similar to |:find|, but it matches multiple terms in any order.

    If one match is found, edit match in current window.
    If multiple matches are found, load results into |quickfix| window.

    nnoremap <leader>f :QuicklyFind<space>

==============================================================================
MAPPINGS                                                    *quickly-mappings*

Default mappings are:

    nnoremap <leader><leader>c :QuicklyBufferDelete<space>
    nnoremap <leader>b :QuicklyBuffer<space>
    nnoremap <leader>o :QuicklyMru<space>
    nnoremap <leader>f :QuicklyFind<space>
    nnoremap <leader>p :QuicklyAny<space>
    nnoremap <c-p> :QuicklyAny<space>

Default mappings can be disabled with:

    let g:quickly_enable_default_key_mappings = 0

==============================================================================
TIPS                                                            *quickly-tips*

* |wildignore| settings are respected. This allows you to ignore file
  or folder paths that you know you will never be interested in.

  set wildignore=*.swp,*.bak
  set wildignore+=*/node_modules/*,*/.git/*,*/.hg/*,*/.svn/*

* Change your ShaDa or viminfo settings. QuicklyMru (and therefore MRU within QuicklyAny) both use :oldfiles, which is limited in history length based on ShaDa (for Neovim) or viminfo (for Vim).

  " Tell vim to remember certain things when we exit,
  " including oldfiles history length
  "  '250  :  MRU / :oldfiles - marks will be remembered for up to 10 previously edited files
  "  "100  :  will save up to 100 lines for each register
  "  :100  :  up to 20 lines of command-line history will be remembered
  "  %     :  saves and restores the buffer list
  "  n     : Choose where to store the file
  if has('nvim')
    set shada='250,\"100,:100,n~/.vim/shada
  else
    set viminfo=\'250,\"100,:100,%
  endif

==============================================================================
